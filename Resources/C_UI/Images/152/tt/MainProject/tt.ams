## ams_version=1.0

Model Main_tt {
    Set s_A {
        Index: i_a;
        Definition: ElementRange(0,9,prefix:"a");
    }
    Set s_B {
        Index: i_b;
        Definition: ElementRange(0,9,prefix:"b");
    }
    Parameter p_Dat {
        IndexDomain: (i_a,i_b);
    }
    StringParameter p_Dat_tooltips {
        IndexDomain: (i_a,i_b);
        Definition: formatString("Some text before %i and some text after", p_Dat(i_a,i_b));
    }
    Set s_TransportMeans {
        Index: i_tm;
        Definition: data { boat, car, plane };
    }
    StringParameter sp_url {
        IndexDomain: i_tm;
        Definition: {
            data { 
            boat: "https://img.icons8.com/flat_round/1600/dive-boat.png",
            car: "https://www.goodfreephotos.com/albums/vector-images/blue-car-vector-graphic.png",
            plane: "https://upload.wikimedia.org/wikipedia/en/7/7b/Belly_of_the_plane.jpg" }
        }
    }
    StringParameter ep_choice_tooltips {
        IndexDomain: i_a;
        Definition: {
            !formatString("john<br><img src=\"file:///d:/u/s/How%%20s/gitlab/master/Resources/C_UI/Images/152/tt/WebUI/MainProject/resources/images/boat.jpg\">")
            !"<img src=\"https://img.icons8.com/flat_round/1600/dive-boat.png\" height=\"200\" width=\"200\">"
            !"<img src=\"https://www.goodfreephotos.com/albums/vector-images/blue-car-vector-graphic.png\" height=\"200\" width=\"200\">"
            !"<img src=\"https://upload.wikimedia.org/wikipedia/en/7/7b/Belly_of_the_plane.jpg\" height=\"200\" width=\"200\">"
            formatString( "<img src=\"%s\" width=\"100\">", sp_url( ep_choice(i_a) ) )
        }
        Comment: {
            "height=\\\"200\\\" width=\\\"200\\\"
            \"D:\\u\\s\\How to\\gitlab\\master\\Resources\\C_UI\\Images\\152\\tt\\MainProject\\WebUI\\resources\\images\\boat.jpg\"
            formatString(\"<img src=\\\".\\\\MainProject\\\\WebUI\\\\resources\\\\images\\\\%e.jpg\\\">\", ep_choice(i_a))
            formatString(\"<img src=\\\"./MainProject/WebUI/resources/images/%e.jpg\\\">\", ep_choice(i_a))
            https://img.icons8.com/flat_round/1600/dive-boat.png"
        }
    }
    StringParameter sp {
        Comment: "https://commons.wikimedia.org/wiki/File:Boat_icon.png";
    }
    ElementParameter ep_choice {
        IndexDomain: i_a;
        Range: s_TransportMeans;
    }
    Procedure MainInitialization {
        Comment: "Add initialization statements here that do NOT require any library being initialized already.";
    }
    Procedure PostMainInitialization {
        Body: {
            p_Dat(i_a, i_b) := ord(i_a)+ord(i_b)-2;
            ep_choice(i_a) := element( s_TransportMeans, 1 + mod( ord(i_a), card( s_TransportMeans ) ) );
        }
        Comment: {
            "Add initialization statements here that require that the libraries are already initialized properly,
            or add statements that require the Data Management module to be initialized."
        }
    }
    Procedure MainExecution;
    Procedure PreMainTermination {
        Body: {
            return 1;
        }
        Comment: {
            "Add termination statements here that require all libraries to be still alive.
            Return 1 if you allow the termination sequence to continue.
            Return 0 if you want to cancel the termination sequence."
        }
    }
    Procedure MainTermination {
        Body: {
            return 1;
        }
        Comment: {
            "Add termination statements here that do not require all libraries to be still alive.
            Return 1 to allow the termination sequence to continue.
            Return 0 if you want to cancel the termination sequence.
            It is recommended to only use the procedure PreMainTermination to cancel the termination sequence and let this procedure always return 1."
        }
    }
}
