## ams_version=1.0

LibraryModule Library_MoreData {
    Prefix: md;
    Interface: Library_MoreData;
    DeclarationSection Running_example_library_input_declarations {
        Set E {
            Index: ie;
            Parameter: ee;
            Definition: ElementRange(1,3,prefix:"e");
        }
        Set F {
            Index: i_f;
            Parameter: e_f;
            Definition: ElementRange(1,5,prefix:"f");
        }
        Set EF {
            SubsetOf: (E, F);
            Tags: (TE, TF);
            Index: iEF;
            Parameter: eEF;
            Definition: {
                { (ie, i_f) | p01(ie, i_f) }
            }
        }
        Parameter p01 {
            IndexDomain: (ie,i_f);
            Range: binary;
        }
        Parameter p {
            IndexDomain: ie;
            Definition: 3.14;
        }
        Parameter pcd {
            IndexDomain: iEF;
        }
    }
    Module EvenMoreIdentifiers {
        Prefix: emi;
        Set sFruits;
        Set sAnimals;
        Set sFood {
            SubsetOf: (sAnimals, sFruits);
            Tags: (TAn, TFr);
            Index: iFood;
            Parameter: eFood;
        }
        Parameter qqq;
    }
    Procedure LibraryInitialization {
        Comment: "Add initialization statements here that do not require any other library being initialized already.";
    }
    Procedure PostLibraryInitialization {
        Comment: {
            "Add initialization statements here that require another library to be initialized already,
            or add statements that require the Data Management module to be initialized."
        }
    }
    Procedure PreLibraryTermination {
        Body: {
            return 1;
        }
        Comment: {
            "Add termination statements here that require all other libraries to be still alive.
            Return 1 if you allow the termination sequence to continue.
            Return 0 if you want to cancel the termination sequence."
        }
    }
    Procedure LibraryTermination {
        Body: {
            return 1;
        }
        Comment: {
            "Add termination statements here that do not require other libraries to be still alive.
            Return 1 to allow the termination sequence to continue.
            Return 0 if you want to cancel the termination sequence.
            It is recommended to only use the procedure PreLibraryTermination to cancel the termination sequence and let this procedure always return 1."
        }
    }
}
