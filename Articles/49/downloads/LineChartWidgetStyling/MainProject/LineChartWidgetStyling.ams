## ams_version=1.0

Model Main_LineChartWidgetStyling {
    Set s_Seasons {
        Index: i_Season;
        webui::AnnotationsIdentifier: sp_SignificantDiff;
    }
    Parameter p_AwaySum {
        IndexDomain: i_Season;
        Comment: "Yearly sum of goals playing away";
        webui::AnnotationsIdentifier: sp_SignificantDiff;
    }
    Parameter p_HomeSum {
        IndexDomain: i_Season;
        Comment: "Yearly sum of goals playing at home.";
        webui::AnnotationsIdentifier: sp_SignificantDiff;
    }
    StringParameter sp_SignificantDiff {
        IndexDomain: i_Season;
        Definition: {
            if abs( p_AwaySum(i_Season) - p_HomeSum(i_Season) ) > 200 then
            	"SignificantDiff"
            else
            	""
            endif
        }
    }
    Procedure MainInitialization {
        Body: {
            read from file "input.txt" ;
        }
        Comment: "Add initialization statements here that do NOT require any library being initialized already.";
    }
    Procedure PostMainInitialization {
        Comment: {
            "Add initialization statements here that require that the libraries are already initialized properly,
            or add statements that require the Data Management module to be initialized."
        }
    }
    Procedure MainExecution;
    Procedure PreMainTermination {
        Body: {
            return 1;
        }
        Comment: {
            "Add termination statements here that require all libraries to be still alive.
            Return 1 if you allow the termination sequence to continue.
            Return 0 if you want to cancel the termination sequence."
        }
    }
    Procedure MainTermination {
        Body: {
            return 1;
        }
        Comment: {
            "Add termination statements here that do not require all libraries to be still alive.
            Return 1 to allow the termination sequence to continue.
            Return 0 if you want to cancel the termination sequence.
            It is recommended to only use the procedure PreMainTermination to cancel the termination sequence and let this procedure always return 1."
        }
    }
}
