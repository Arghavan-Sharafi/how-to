## ams_version=1.0

Section CheckingDefinitions {
    Parameter p1 {
        InitialData: 1;
    }
    Parameter p2 {
        InitialData: 1;
    }
    Parameter p3 {
        Definition: p1 / p2;
    }
    Procedure pr_TestCheckDefinitions {
        Body: {
            p2 := 0 ;
            s_SomeIds := data { 'util::p3' };
            pr_CheckDefinitions( s_SomeIds );
        }
        Set s_SomeIds {
            SubsetOf: AllIdentifiers;
        }
    }
    Procedure pr_CheckDefinitions {
        Arguments: (s_TestedIds);
        Body: {
            for  i_ti | ( ( i_ti in AllDefinedSets ) or (i_ti in AllDefinedParameters ) ) do
            	block
            		s_OneId := {} ;
            		s_OneId += i_ti ;
            		update s_OneId ;
            	onerror ep_err do
            		sp_msg := FormatString("Definition evaluation error of %e with message: \"%s\"",
            			i_ti, errh::Message(ep_err));
            		errh::Adapt(ep_err,message:sp_msg);
             	endblock ;
            endfor ;
        }
        StringParameter sp_msg;
        Set s_OneId {
            SubsetOf: AllIdentifiers;
        }
        ElementParameter ep_err {
            Range: errh::PendingErrors;
        }
        Set s_TestedIds {
            SubsetOf: AllIdentifiers;
            Index: i_ti;
            Property: Input;
        }
    }
}
