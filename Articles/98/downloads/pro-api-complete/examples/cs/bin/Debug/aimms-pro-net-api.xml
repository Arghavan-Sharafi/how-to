<?xml version="1.0"?>
<doc>
    <assembly>
        <name>aimms-pro-net-api</name>
    </assembly>
    <members>
        <member name="T:com.aimms.pro.api.Job">
            <summary>
            Represents the Job at the PRO server
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.Job.#ctor(com.aimms.pro.api.JobInteractor)">
            <summary>
            Constructs the job; iniated by Server to create/schedule a new Job
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.Job.#ctor(proarmiapi.Api.SessionInfo,com.aimms.pro.api.impl.ServiceProvider,com.aimms.pro.api.impl.JobMessageHandler)">
            <summary>
            Constructs the job; initiated by server from getting the JobList
            these jobs do not (yet) have an attached interactor/msgHandler pair
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.Job.hasEnded">
            <summary>
            tests whether the current state is a end state
            </summary>
            <returns>whether the job has ended</returns>
        </member>
        <member name="M:com.aimms.pro.api.Job.refresh">
            <summary>
            retrieves the latest information from server
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.Job.terminate">
            <summary>
            Terminates this job but leaves it in the job list
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.Job.delete">
            <summary>
            Removes this job from the job list, renders this object useless
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.Job.JobInteractor">
            <summary>
            The associated JobInteractor object
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.Job.App">
            <summary>
            Name of the application this job was created for
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.Job.Description">
            <summary>
            Description specified during creation of this job
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.Job.Status">
            <summary>
            Current state of this job
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.Job.Owner">
            <summary>
            The owner of this job
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.Job.Created">
            <summary>
            The time at which this job was created
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.Job.RunTime">
            <summary>
            The amount of time this job is running or has run
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.Job.QueueTime">
            <summary>
            The amount of time this job is running. A negative value indicates it's scheduled
            to run after that amount of time in the future
            </summary>
        </member>
        <member name="T:com.aimms.pro.api.JobInteractor">
            <summary>
            Allows interaction with a PRO job
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.#ctor">
            <summary>
            Creates a (yet) unattached version with a default finish-grace-timeout of 1 second
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.#ctor(System.Int32)">
            <summary>
            Creates a (yet) unattached version with the specified finish-grace-timeout
            The finis-grace-timeout is the amount of time to wait after the (main) scheduled
            procedure has finished in order to allow other messages to arrive and process
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.onFinished">
            <summary>
            called by the PRO API framework when for the current job the finished-job message is received
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.onError(System.String)">
            <summary>
            invoked by the PRO API framework when for the current job an error message is received
            </summary>
            <param name="errorMessage">a string describing the error that occured</param>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.onHandle(com.aimms.pro.api.ProcedureCall)">
            <summary>
            invoked by the PRO API framework when for the current job at the remote end
            a DelegateToClient is executed, effectively asking this (PRO API) side to 
            invoke the specified ProcedureCall
            </summary>
            <param name="procedureCall">The ProcedureCall to invoke/handle</param>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.waitForEvent(System.TimeSpan)">
            <summary>
            Wait for an InteractiveJobEvent to happen on the remote AIMMS PRO job
            </summary>
            <param name="timeout">The timeout for waiting for this event</param>
            <returns></returns>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.firstIncomingProcedureCall">
            <summary>
            retrieves the first ProcedureCall received from the remote AIMMS PRO job. After
            retrieving this ProcedureCall, this method will return the next available ProcedureCall.
            </summary>
            <returns>a null reference when there are no more incoming procedure calls</returns>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.firstIncomingError">
            <summary>
            retrieves the first ProcedureCall received from the remote AIMMS PRO job. After
            retrieving this ProcedureCall, this method will return the next available ProcedureCall.
            </summary>
            <returns>a null reference when there are no more incoming errors</returns>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.inject(com.aimms.pro.api.ProcedureCall)">
            <summary>
            Injects the specified ProcedureCall into the running job. The remote AIMMS job
            will finish it's current statement, and continue by executing the specified procedure
            call after which it continues with the prior running procedure.
            </summary>
            <param name="procedureCall">ProcedureCall to execute on the remote AIMMS PRO job</param>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.queue(com.aimms.pro.api.ProcedureCall)">
            <summary>
            Queues the specified ProcedureCall into the running job. The remote AIMMS job
            will first finish it's current executing procedure before continuing with the 
            procedure call specified.
            </summary>
            <param name="procedureCall">ProcedureCall to execute on the remote AIMMS PRO job</param>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.stopSolve">
            <summary>
            Instruct the remote job to stop the current solve (if any) and continue with the
            last computed/solved values the current procedure run.
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.JobInteractor.stopTask">
            <summary>
            Instruct the remote job to stop everything as soon as possible and terminate gracefully;
            this is different from terminating the current job, which will just kill the remote process 
            associated with this job.
            </summary>
        </member>
        <member name="T:com.aimms.pro.api.Parameter">
            <summary>
            The Parameter object represents the data associated with an AIMMS
            (numeric) Parameter
            </summary>
        </member>
        <member name="T:com.aimms.pro.api.BaseParameter`1">
            <summary>
            Abstract helper class implementing a container for TupleValuePair objects
            </summary>
            <typeparam name="T">the kind of value-type</typeparam>
        </member>
        <member name="T:com.aimms.pro.api.Identifier">
            <summary>
            An interface for passing the appropriate kind of argument to a ProcedureCall object
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.Identifier.IdentifierType">
            <summary>
            returns the actual type of this identifier
            </summary>
        </member>
        <member name="F:com.aimms.pro.api.BaseParameter`1.data">
            <summary>
            List of TupleValuePairs, representing the data of the AIMMS identifier
            </summary>
        </member>
        <member name="F:com.aimms.pro.api.BaseParameter`1.dimension">
            <summary>
            Dimension of the identifier, this should also be enforced upon all TupleValuePairs that
            are added to this container
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.BaseParameter`1.#ctor(System.Int32)">
            <summary>
            Construct a BaseParameter with the specified dimension
            </summary>
            <param name="dimension"></param>
        </member>
        <member name="M:com.aimms.pro.api.BaseParameter`1.add(System.String[],`0)">
            <summary>
            add a tuple-value pair to this container
            </summary>
            <param name="tuple"></param>
            <param name="value"></param>
        </member>
        <member name="P:com.aimms.pro.api.BaseParameter`1.Cardinality">
            <summary>
            the cardinality of this identifier, i.e. the amount of TupleValuePairs stored
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.BaseParameter`1.Dimension">
            <summary>
            the dimension of this identifier
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.BaseParameter`1.Data">
            <summary>
            the collection of TupleValuePairs representing the data of this identifier
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.Parameter.#ctor(System.Int32)">
            <summary>
            Construct a new kind of Parameter object
            </summary>
            <param name="dimension">The dimension of the parameter</param>
        </member>
        <member name="M:com.aimms.pro.api.Parameter.#ctor(System.Double)">
            <summary>
            Construct a new kind of scalar Parameter
            </summary>
            <param name="value">The value for this scalar Parameter</param>
        </member>
        <member name="P:com.aimms.pro.api.Parameter.IdentifierType">
            <summary>
            IdentifierType belong to this Parameter; it should always return IdentifierType.Parameter
            </summary>
        </member>
        <member name="F:com.aimms.pro.api.IdentifierType.Parameter">
            <summary>
            Enumeration value to indicate the kind of Identifier to be a Parameter
            </summary>
        </member>
        <member name="F:com.aimms.pro.api.IdentifierType.StringParameter">
            <summary>
            Enumeration value to indicate the kind of Identifier to be a StringParameter
            </summary>
        </member>
        <member name="T:com.aimms.pro.api.ProcedureCall">
            <summary>
            Represents the remote procedure call to invoke
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.ProcedureCall.#ctor(System.String,com.aimms.pro.api.Identifier[])">
            <summary>
            Constructs procedure config
            </summary>
            <param name="procedureName">the name of an existing procedure in the AIMMS model.</param>
            <param name="procedureArguments">arguments for this procedure in the order specfied in the AIMMS model.</param>
        </member>
        <member name="P:com.aimms.pro.api.ProcedureCall.ProcedureName">
            <summary>
            The name of the Procedure that this ProcedureCall should invoke
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.ProcedureCall.ProcedureArguments">
            <summary>
            The arguments for this ProcedureCall
            </summary>
        </member>
        <member name="T:com.aimms.pro.api.RuntimeException">
            <summary>
             Represents errors that occur during PRO job execution.
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.RuntimeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the com.aimms.pro.api.RuntimeException class with a specified
            error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:com.aimms.pro.api.RuntimeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the com.aimms.pro.api.RuntimeException class with a specified
            error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:com.aimms.pro.api.Server">
            <summary>
            Representation of the remote PRO server
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.Server.createConnection(com.aimms.pro.api.ServerConfig)">
            <summary>
            Creates a Server object that represents the remote PRO server 
            </summary>
            <param name="config">configuration for the new instance</param>
            <returns>created instance</returns>
        </member>
        <member name="M:com.aimms.pro.api.Server.closeConnection">
            <summary>
            Close the connection to the remote PRO server and frees up resources
            associated with this PRO server (locally)
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.Server.getCurrentJobs">
            <summary>
            Retrieve the list of current jobs; this is equivalent to navigating to the 
            Jobs page in the portal
            </summary>
            <returns>a list of current jobs</returns>
        </member>
        <member name="M:com.aimms.pro.api.Server.scheduleJob(com.aimms.pro.api.JobConfig)">
            <summary>
            Schedule a new job according to the specified JobConfig
            </summary>
            <param name="jobConfig">the JobConfig describing the Job to schedule</param>
            <returns>a Job instance</returns>
        </member>
        <member name="M:com.aimms.pro.api.Server.scheduleJob(com.aimms.pro.api.JobConfig,com.aimms.pro.api.JobInteractor)">
            <summary>
            Schedule a new job according to the specified JobConfig while attaching the specified JobInteractor
            </summary>
            <param name="jobConfig">the JobConfig describing the Job to schedule</param>
            <param name="jobInteractor">the JobInteractor used to interact with the to be scheduled Job</param>
            <returns></returns>
        </member>
        <member name="M:com.aimms.pro.api.Server.uploadLocalFileToStorage(System.String,System.String)">
            <summary>
            Uploads a file to the PRO Storage
            </summary>
            <param name="localPath">an existing file that needs to be uploaded</param>
            <param name="storagePath">the path in the storage at which the file would be stored</param>
        </member>
        <member name="M:com.aimms.pro.api.Server.downloadStorageFileToLocalFile(System.String,System.String)">
            <summary>
            Downloads a file from the PRO Storage
            </summary>
            <param name="storagePath">the path in the storage at which the file is stored</param>
            <param name="localPath">a file to which the file should be downloaded (existing file would be overwritten) or a folder in which a new file would be created</param>
        </member>
        <member name="M:com.aimms.pro.api.Server.deleteFileFromStorage(System.String)">
            <summary>
            Deletes a file from the PRO Storage
            </summary>
            <param name="storagePath">the full path to the file in the storage</param>
        </member>
        <member name="T:com.aimms.pro.api.ServerConfig">
            <summary>
            Represents the configuration needed for connecting to the PRO server
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.ServerConfig.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="username">the username used to login to PRO. E.g. admin</param>
            <param name="password">the username's password. E.g. admin</param>
            <param name="environment">the PRO environment to which the user belongs to. E.g. ROOT. Arguments are case insensitive</param>
            <param name="endpoint">the URL of the PRO backend service. E.g. tcp://localhost:19340</param>
        </member>
        <member name="P:com.aimms.pro.api.ServerConfig.username">
            <summary>
            The username to login to the PRO server
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.ServerConfig.password">
            <summary>
            The password to use for logging into the PRO server
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.ServerConfig.environment">
            <summary>
            The environment to login to the PRO server
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.ServerConfig.endpoint">
            <summary>
            The endpoint at which to reach the PRO server
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.ServerConfig.dnsName">
            <summary>
            The dnsName used to contact the PRO server
            </summary>
        </member>
        <member name="T:com.aimms.pro.api.JobConfig">
            <summary>
            The JobConfig class is used to specify configuration of a job to schedule to the PRO server 
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.JobConfig.#ctor(System.String,System.String,com.aimms.pro.api.ProcedureCall)">
            <summary>
            Creates a new JobConfig using the default description 'PRO API job' and the default timeout
            of one hour. The job will be executed as soon as possible.
            throws ArgumentException if the arguments have null or empty values
            </summary>
            <param name="projectName">the name of the project</param>
            <param name="projectVersion">the version of project</param>
            <param name="procedureCall">the ProcedureCall that will be invoked when starting this job</param>
        </member>
        <member name="M:com.aimms.pro.api.JobConfig.#ctor(System.String,System.String,System.String,com.aimms.pro.api.ProcedureCall)">
            <summary>
            Creates a new JobConfig using the default timeout of one hour. The job will be executed as soon as possible
            throws ArgumentException if the arguments have null or empty values
            </summary>
            <param name="projectName">the name of the project</param>
            <param name="projectVersion">the version of project</param>
            <param name="description">the description of the to be created job</param>
            <param name="procedureCall">the ProcedureCall that will be invoked when starting this job</param>
        </member>
        <member name="M:com.aimms.pro.api.JobConfig.#ctor(System.String,System.String,System.TimeSpan,com.aimms.pro.api.ProcedureCall)">
            <summary>
            Creates a new JobConfig using the default description 'PRO API job'. The job will be executed as soon as possible.
            throws ArgumentException if the arguments have null or empty values
            </summary>
            <param name="projectName">the name of the project</param>
            <param name="projectVersion">the version of project</param>
            <param name="timeout">the maximum amount of time to run</param>
            <param name="procedureCall">the ProcedureCall that will be invoked when starting this job</param>
        </member>
        <member name="M:com.aimms.pro.api.JobConfig.#ctor(System.String,System.String,System.String,System.TimeSpan,com.aimms.pro.api.ProcedureCall)">
            <summary>
            Creates a new JobConfig. The job will be executed as soon as possible.
            throws ArgumentException if the arguments have null or empty values
            </summary>
            <param name="projectName">the name of the project</param>
            <param name="projectVersion">the version of project</param>
            <param name="description">the description of the to created job</param>
            <param name="timeout">the maximum amount of time to run</param>
            <param name="procedureCall">the ProcedureCall that will be invoked when starting this job</param>
        </member>
        <member name="M:com.aimms.pro.api.JobConfig.#ctor(System.String,System.String,System.String,System.TimeSpan,System.DateTime,com.aimms.pro.api.ProcedureCall)">
            <summary>
            Creates a new JobConfig
            throws ArgumentException if the arguments have null or empty values
            </summary>
            <param name="projectName">the name of the project</param>
            <param name="projectVersion">the version of project</param>
            <param name="description">the description of the to created job</param>
            <param name="timeout">the maximum amount of time to run</param>
            <param name="scheduleAt">the time at which to start the job</param>
            <param name="procedureCall">the ProcedureCall that will be invoked when starting this job</param>
        </member>
        <member name="P:com.aimms.pro.api.JobConfig.ProjectName">
            <summary>
            The name of the project to run
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.JobConfig.ProjectVersion">
            <summary>
            The version of the project to run
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.JobConfig.Timeout">
            <summary>
            The amount of time this job might run; if this time is exceeded the AIMMS
            PRO server will terminate the job
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.JobConfig.Description">
            <summary>
            The description of the job
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.JobConfig.ScheduleAt">
            <summary>
            The time at which the job is to start
            </summary>
        </member>
        <member name="P:com.aimms.pro.api.JobConfig.ProcedureCall">
            <summary>
            The ProcedureCall representing the procedure to invoke upon job startup
            </summary>
        </member>
        <member name="T:com.aimms.pro.api.StringParameter">
            <summary>
            The StringParameter object represents the data associated with an AIMMS
            StringParameter
            </summary>
        </member>
        <member name="M:com.aimms.pro.api.StringParameter.#ctor(System.String)">
            <summary>
            Construct a new kind of scalar StringParameter
            </summary>
            <param name="value">The value for this scalar StringParameter</param>
        </member>
        <member name="M:com.aimms.pro.api.StringParameter.#ctor(System.Int32)">
            <summary>
            Construct a new kind of StringParameter object
            </summary>
            <param name="dimension">The dimension of the string parameter</param>
        </member>
        <member name="P:com.aimms.pro.api.StringParameter.IdentifierType">
            <summary>
            IdentifierType belong to this StringParameter; it should always return 
            IdentifierType.StringParameter
            </summary>
        </member>
        <member name="T:com.aimms.pro.api.TupleValuePair`1">
            <summary>
            A Container class for a tuple-value pair in AIMMS
            </summary>
            <typeparam name="T">the kind of value-type</typeparam>
        </member>
        <member name="M:com.aimms.pro.api.TupleValuePair`1.#ctor(System.String[],`0)">
            <summary>
            Construct a new TupleValuePair
            </summary>
            <param name="tuple">an array of strings representing the data-point</param>
            <param name="value">the data-value</param>
        </member>
    </members>
</doc>
