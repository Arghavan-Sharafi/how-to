## ams_version=1.0

LibraryModule JsonXML {
    Prefix: jxml;
    Interface: {
        data { sp_DLLFilename, 
               ConvertFromJsonToXML, 
               ConvertFromXMLToJson }
    }
    Section Conversion_between_XML_and_JSON {
        StringParameter sp_DLLFilename {
            Definition: {
                "DLL" +
                if AimmsStringConstants('Platform') = "Windows" then
                	"\\Windows\\" +
                	AimmsStringConstants('Architecture')+
                	"\\JSonXMLexchange.dll"
                else
                	"/Linux/"+
                	AimmsStringConstants('Architecture')+
                	"/JSonXMLexchange.so"
                endif
            }
        }
        ExternalProcedure ConvertFromJsonToXML {
            Arguments: (sp_inpFilename,sp_OutFilename);
            DllName: sp_DLLFilename;
            ReturnType: integer;
            Encoding: 'UTF8';
            BodyCall: {
                ConvertJson2XML(
                	scalar string : sp_inpFilename,
                	scalar string : sp_OutFilename
                )
            }
            StringParameter sp_inpFilename {
                Property: Input;
            }
            StringParameter sp_OutFilename {
                Property: Input;
            }
        }
        ExternalProcedure ConvertFromXMLToJson {
            Arguments: (sp_inpFilename,sp_OutFilename);
            DllName: sp_DLLFilename;
            ReturnType: integer;
            Encoding: 'UTF8';
            BodyCall: {
                ConvertXML2Json(
                	scalar string : sp_inpFilename,
                	scalar string : sp_OutFilename
                )
            }
            StringParameter sp_inpFilename {
                Property: Input;
            }
            StringParameter sp_OutFilename {
                Property: Input;
            }
        }
    }
}
