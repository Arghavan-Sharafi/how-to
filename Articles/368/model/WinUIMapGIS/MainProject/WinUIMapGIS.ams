## ams_version=1.0

Model Main_WinUIMapGIS {
	DeclarationSection Bing {
		StringParameter sp_BingApiKey {
			Definition: "AmrjdgYXndzp1fR0JjSLKDwrhZO7_gy_BN1faRJ3zW0_Wf_EObeRts2ptx9L2Lp_";
		}
	}
	DeclarationSection OSM {
		StringParameter sp_OSMCredentialsFilename {
			InitialData: "OSM.credentials";
		}
		StringParameter sp_OSMurl {
			InitialData: {
				!"http://mundialis.de"
				!"http://a.tile.openstreetmap.de"
				!"http://maps.omniscale.com"
				"maps.omniscale.com"
			}
			Comment: "\"https://a.tile.openstreetmap.de\"";
		}
		StringParameter sp_OSMuser {
			InitialData: "chriskuip@gmail.com";
		}
		StringParameter sp_OSMpassword {
			InitialData: "tU4d^zv2dqeF3ms@%aUG25VO";
		}
	}
	Parameter p;
	Set s_Nodes {
		Index: i, j;
	}
	Parameter p_left {
		Definition: 3.3;
	}
	Parameter p_right {
		InitialData: 7.3;
	}
	Parameter p_top {
		Definition: 54.0;
	}
	Parameter p_bot {
		Definition: 50.0;
	}
	Parameter p_x {
		IndexDomain: i;
	}
	Parameter p_y {
		IndexDomain: i;
	}
	Parameter p01_arcs {
		IndexDomain: (i,j);
		Definition: 1 $ ( i = ( j ++ 1 ) );
	}
	Section Application_initialization_execution_and_termination {
		Procedure MainInitialization {
			Comment: "Add initialization statements here that do NOT require any library being initialized already.";
		}
		Procedure PostMainInitialization {
			Body: {
				read from file "data/Four.txt" ;
				if FileExists( sp_OSMCredentialsFilename ) then
					read from file sp_OSMCredentialsFilename ;
				endif ;
			}
			Comment: {
				"				\"Add initialization statements here that require that the libraries are already initialized properly,
								or add statements that require the Data Management module to be initialized.\""
			}
		}
		Procedure MainExecution;
		Procedure PreMainTermination {
			Body: {
				!return DataManagementExit();
				return 1; ! This app doesn't use cases.
			}
			Comment: {
				"				\"Add termination statements here that require all libraries to be still alive.
								Return 1 if you allow the termination sequence to continue.
								Return 0 if you want to cancel the termination sequence.\""
			}
		}
		Procedure MainTermination {
			Body: {
				return 1;
			}
			Comment: {
				"				\"Add termination statements here that do not require all libraries to be still alive.
								Return 1 to allow the termination sequence to continue.
								Return 0 if you want to cancel the termination sequence.
								It is recommended to only use the procedure PreMainTermination to cancel the termination sequence and let this procedure always return 1.\""
			}
		}
	}
}
