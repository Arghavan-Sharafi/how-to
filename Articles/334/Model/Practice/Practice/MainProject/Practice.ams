## ams_version=1.0

Model Main_Transport {
    Set s_Plants {
        Index: p;
        Definition: {
            {'plant A', 'plant B'}
        }
    }
    Set s_Costumers {
        Index: c;
        Definition: {
            {'Costumer A', 'Costumer B', 'Costumer C', 'Costumer D', 'Costumer E'}
        }
    }
    Parameter p_Supply {
        IndexDomain: p;
    }
    Parameter p_Demand {
        IndexDomain: c;
    }
    Parameter p_TransportCost {
        IndexDomain: (p,c);
    }
    Variable v_TotalTransportCost {
        Range: free;
        Definition: sum[(p,c), v_Transport(p,c) * p_TransportCost(p,c) ];
    }
    Variable v_Transport {
        IndexDomain: (p,c);
        Range: nonnegative;
    }
    Procedure MainInitialization {
        Comment: "Add initialization statements here that do NOT require any library being initialized already.";
    }
    Procedure PostMainInitialization {
        Comment: {
            "Add initialization statements here that require that the libraries are already initialized properly,
            or add statements that require the Data Management module to be initialized."
        }
    }
    Procedure MainExecution {
        Body: {
            pl::TransferData(s_Plants, s_Costumers, p_Supply, p_Demand, p_TransportCost, v_TotalTransportCost, v_Transport);
        }
    }
    Procedure PreMainTermination {
        Body: {
            return DataManagementExit();
        }
        Comment: {
            "Add termination statements here that require all libraries to be still alive.
            Return 1 if you allow the termination sequence to continue.
            Return 0 if you want to cancel the termination sequence."
        }
    }
    Procedure MainTermination {
        Body: {
            return 1;
        }
        Comment: {
            "Add termination statements here that do not require all libraries to be still alive.
            Return 1 to allow the termination sequence to continue.
            Return 0 if you want to cancel the termination sequence.
            It is recommended to only use the procedure PreMainTermination to cancel the termination sequence and let this procedure always return 1."
        }
    }
}
